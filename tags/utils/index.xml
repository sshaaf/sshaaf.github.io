<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>utils on Shaaf, Syed's blog</title><link>https://shaaf.dev/tags/utils/</link><description>Recent content in utils on Shaaf, Syed's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 10 Dec 2008 16:58:04 +0100</lastBuildDate><atom:link href="https://shaaf.dev/tags/utils/index.xml" rel="self" type="application/rss+xml"/><item><title>Generate XML - DBMS_XMLGEN</title><link>https://shaaf.dev/post/2008-12-10-generate-xml-dbms_xmlgen/</link><pubDate>Wed, 10 Dec 2008 16:58:04 +0100</pubDate><guid>https://shaaf.dev/post/2008-12-10-generate-xml-dbms_xmlgen/</guid><description>On my way to my solution store just found this nice to use, old and easy feature. Possibilities endless, usage typically very easy.
I used the following to generate XML from sqlplus:
select dbms_xmlgen.getxml('select * from user') from dual; Output: &amp;lt; ROWSET &amp;gt; &amp;lt; ROW &amp;gt; &amp;lt; TNAME &amp;gt;Employee&amp;lt; / TNAME &amp;gt; &amp;lt; TABTYPE &amp;gt; TABLE &amp;lt; / TABTYPE &amp;gt; &amp;lt; / ROW &amp;gt; &amp;lt; / ROWSET &amp;gt;</description></item><item><title>Doing the Locale - Danmark</title><link>https://shaaf.dev/post/2008-11-12-doing-the-locale-danmark/</link><pubDate>Wed, 12 Nov 2008 14:52:08 +0100</pubDate><guid>https://shaaf.dev/post/2008-11-12-doing-the-locale-danmark/</guid><description>The following illustrates how to get the Number format working with a danish locale.
&amp;rsquo;&amp;rsquo;' import java.text.NumberFormat; import java.util.Currency; import java.util.Locale;
public class TestLocale { public static void main(String args[]){ // Create a Locale for Danmark Locale DANMARK = new Locale(&amp;quot;da&amp;quot;,&amp;quot;DK&amp;quot;); // get the currency instance for this locale. Currency krone = Currency.getInstance(DANMARK); // Get a Number format for the locale. NumberFormat krFormat = NumberFormat.getCurrencyInstance(DANMARK); // A symbol for the currency String symbol = krFormat.</description></item><item><title>How to read a file from the JAR?</title><link>https://shaaf.dev/post/2008-10-31-how-to-read-a-file-from-the-jar/</link><pubDate>Fri, 31 Oct 2008 20:57:54 +0100</pubDate><guid>https://shaaf.dev/post/2008-10-31-how-to-read-a-file-from-the-jar/</guid><description>Someone just asked me this question today. And I thought might as well put it down for info.
&amp;rsquo;&amp;rsquo;' public TestReadFileFromJar() throws FileNotFoundException, IOException { InputStream is = getClass().getResource(&amp;ldquo;txtData/states.properties&amp;rdquo;); read(is); } &amp;rsquo;''
In the case above txtData is placed in the jar on the root. Remmember to add the path with the &amp;ldquo;/&amp;rdquo;</description></item><item><title>Crocus - CSV Reader</title><link>https://shaaf.dev/post/2008-10-03-crocus-csv-reader/</link><pubDate>Fri, 03 Oct 2008 23:38:42 +0200</pubDate><guid>https://shaaf.dev/post/2008-10-03-crocus-csv-reader/</guid><description>Easy to use ready to go CSV File Reading utility. Read One or Multiple files into a RecordManager, quick access to the file with segmentation into Fields and Records. Merge Multiple CSV files in one. Listener to CSV Files.
Download Here
Organization: A CSV file is broken up as follows A CSVField has a group of characters A CSVRecord has a group of CSVFields A CSVFile has a group of record</description></item></channel></rss>