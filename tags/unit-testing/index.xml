<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>unit-testing on Shaaf, Syed's blog</title><link>https://shaaf.dev/tags/unit-testing/</link><description>Recent content in unit-testing on Shaaf, Syed's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 12 Aug 2009 16:13:30 +0200</lastBuildDate><atom:link href="https://shaaf.dev/tags/unit-testing/index.xml" rel="self" type="application/rss+xml"/><item><title>Getting started with JBehave in 8 steps.</title><link>https://shaaf.dev/post/2009-08-12-getting-started-with-jbehave-in-8-steps/</link><pubDate>Wed, 12 Aug 2009 16:13:30 +0200</pubDate><guid>https://shaaf.dev/post/2009-08-12-getting-started-with-jbehave-in-8-steps/</guid><description>This post is about JBehave and how to quickly get started with it. If you would like to know about BDD please use the following link. What is Behavioral Driven Development?
Today I have used JBehave for the first time. It does have some convincing factors for instance diving requirements into scenarios which map pretty nicely to the tests that are written with in the Steps. Thus it seems like it would be easier for Stakeholder/s to use it as a good guideline for the initial requirements.</description></item></channel></rss>