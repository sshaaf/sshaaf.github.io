<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>docker on Shaaf, Syed's blog</title><link>https://shaaf.dev/tags/docker/</link><description>Recent content in docker on Shaaf, Syed's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 18 Jan 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://shaaf.dev/tags/docker/index.xml" rel="self" type="application/rss+xml"/><item><title>Setup docker on Fedora 33</title><link>https://shaaf.dev/post/2020-01-18-setting-up-docker-fedora-33/</link><pubDate>Sat, 18 Jan 2020 00:00:00 +0000</pubDate><guid>https://shaaf.dev/post/2020-01-18-setting-up-docker-fedora-33/</guid><description>I use Fedora as my regular Linux. And I have been doing that for years now, even though I am a developer its simple and straight forward enough to get my way around. It has some great features and spins. You should check it out at Fedora project
Here is a quick list of things that worked for me to setup docker on Fedora 33. I followed the guidelines here. Plus some more to config the firewall and user access.</description></item><item><title>Creating and deploying a Java 8 runtime container image</title><link>https://shaaf.dev/post/2019-02-26-create-java-8-runtime-container-image/</link><pubDate>Tue, 26 Feb 2019 07:07:22 +0200</pubDate><guid>https://shaaf.dev/post/2019-02-26-create-java-8-runtime-container-image/</guid><description>Orignally posted at Red Hat Developers
A Java runtime environment should be able to run compiled source code, whereas a development kit, for example, OpenJDK, would include all the libraries/binaries to compile and run the source code. Essentially the latter is a superset of the runtime environment. More details on OpenJDK support and lifecycle can be found here.
Red Hat ships and supports container images with OpenJDK for both Java 8 and 11.</description></item></channel></rss>