<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>java on Shaaf, Syed's blog</title><link>https://shaaf.dev/tags/java/</link><description>Recent content in java on Shaaf, Syed's blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 11 Apr 2022 07:07:22 +0200</lastBuildDate><atom:link href="https://shaaf.dev/tags/java/index.xml" rel="self" type="application/rss+xml"/><item><title>Processing images in Java with OpenCV and Quarkus</title><link>https://shaaf.dev/post/2022-04-11-processing-images-in-java-with-opencv-and-quarkus/</link><pubDate>Mon, 11 Apr 2022 07:07:22 +0200</pubDate><guid>https://shaaf.dev/post/2022-04-11-processing-images-in-java-with-opencv-and-quarkus/</guid><description>If you are into Computer vision, you probably are familiar with OpenCV. Its an amazing library that has almost everything one needs to do 2D and 3D processing and much more. Gesture recognition, face detection, Motion tracking, think of anything related to image processing and OpenCV can be your goto. Its based on the BSD license, so you can just download it and start using it.
OpenCV is written in C, and there are nice Java bindings for it too.</description></item><item><title>SQL cache stores and more in Data Grid 8.3</title><link>https://shaaf.dev/post/2022-02-24-sql-cache-stores-and-more-data-grid-83/</link><pubDate>Thu, 24 Feb 2022 07:07:22 +0200</pubDate><guid>https://shaaf.dev/post/2022-02-24-sql-cache-stores-and-more-data-grid-83/</guid><description>Orignally posted at Red Hat Developers
Red Hat Data Grid is a distributed, cloud-based datastore offering very fast response times as an in-memory database. The latest version, Data Grid 8.3, features cross-site replication with more observability and two new types of SQL cache store for scaling applications with large datasets. This version also brings improved security, support for Helm charts, and a better command-line interface (CLI).
This article is an overview of new features and enhancements in this latest version of Red Hat Data Grid.</description></item><item><title>What's new for developers in Java 18</title><link>https://shaaf.dev/post/2022-01-27-whats-new-for-developers-in-java-18/</link><pubDate>Thu, 27 Jan 2022 07:07:22 +0200</pubDate><guid>https://shaaf.dev/post/2022-01-27-whats-new-for-developers-in-java-18/</guid><description>Orignally posted at Red Hat Developers
In exciting news for Java developers, Java 18 forked off from the main line at the end of last year and has entered Rampdown Phase Two. This article highlights some of the features that developers can look for in the upcoming Java 18 release, including the new simple web server module, a more sophisticated way to annotate your Javadocs, and the â€“finalization=disabled option, which lets you test how a Java application will behave when finalization is removed in a future release.</description></item><item><title>Deploy Quarkus everywhere with Red Hat Enterprise Linux (RHEL)</title><link>https://shaaf.dev/post/2021-05-17-deploy-quarkus-everywhere/</link><pubDate>Fri, 07 May 2021 07:07:22 +0200</pubDate><guid>https://shaaf.dev/post/2021-05-17-deploy-quarkus-everywhere/</guid><description>Orignally posted at Red Hat Developers
Java is one of the most used languages out there and has been in the top three for the last two decades. Java powers millions of applications across verticals and platforms. Linux is widely deployed in data centers, Edge networks, and Cloud. Today we announce the availability of Quarkus for all our Red Hat Enterprise Linux (RHEL) customers. If you are running RHEL, you can now also run Red Hat Build of Quarkus (RHBQ).</description></item><item><title>Creating and deploying a Java 8 runtime container image</title><link>https://shaaf.dev/post/2019-02-26-create-java-8-runtime-container-image/</link><pubDate>Tue, 26 Feb 2019 07:07:22 +0200</pubDate><guid>https://shaaf.dev/post/2019-02-26-create-java-8-runtime-container-image/</guid><description>Orignally posted at Red Hat Developers
A Java runtime environment should be able to run compiled source code, whereas a development kit, for example, OpenJDK, would include all the libraries/binaries to compile and run the source code. Essentially the latter is a superset of the runtime environment. More details on OpenJDK support and lifecycle can be found here.
Red Hat ships and supports container images with OpenJDK for both Java 8 and 11.</description></item><item><title>Getting started with JBehave in 8 steps.</title><link>https://shaaf.dev/post/2009-08-12-getting-started-with-jbehave-in-8-steps/</link><pubDate>Wed, 12 Aug 2009 16:13:30 +0200</pubDate><guid>https://shaaf.dev/post/2009-08-12-getting-started-with-jbehave-in-8-steps/</guid><description>This post is about JBehave and how to quickly get started with it. If you would like to know about BDD please use the following link. What is Behavioral Driven Development?
Today I have used JBehave for the first time. It does have some convincing factors for instance diving requirements into scenarios which map pretty nicely to the tests that are written with in the Steps. Thus it seems like it would be easier for Stakeholder/s to use it as a good guideline for the initial requirements.</description></item><item><title>Logging with log4J isDebugEnabled</title><link>https://shaaf.dev/post/2009-08-12-logging-with-log4j-isdebugenabled/</link><pubDate>Wed, 12 Aug 2009 14:39:52 +0200</pubDate><guid>https://shaaf.dev/post/2009-08-12-logging-with-log4j-isdebugenabled/</guid><description>Excerpt: Alot of times I have seen the questions popping up whether to use isDebugEnabled property or not. Arguably most of the times or rather always about performance. Some of the stuff that I feel important about using it follows.
Alot of times I have seen the questions popping up whether to use isDebugEnabled property or not. Arguably most of the times or rather always about performance. Some of the stuff that I feel important about using it follows.</description></item><item><title>Calling wsadmin scripts from ant</title><link>https://shaaf.dev/post/2008-12-11-calling-wsadmin-scripts-from-ant/</link><pubDate>Thu, 11 Dec 2008 10:17:46 +0100</pubDate><guid>https://shaaf.dev/post/2008-12-11-calling-wsadmin-scripts-from-ant/</guid><description>You can simply add the following to a target. For the following wsadmin should be in your PATH env.
&amp;lt; exec dir=&amp;quot;.&amp;quot; executable=&amp;quot;wsadmin.bat&amp;quot; logError=&amp;quot;true&amp;quot; failonerror=&amp;quot;true&amp;quot; output=&amp;quot;wsconfig.out&amp;quot; &amp;gt; &amp;lt; arg line=&amp;quot;-lang jython -f ../../createQFactory.py&amp;quot;/ &amp;gt; &amp;lt; /exec &amp;gt; All output will be logged to wsconfig.out</description></item><item><title>Command, Singleton, JMenuItem, JButton, AbstractButton - One Listener for the app</title><link>https://shaaf.dev/post/2008-11-17-command-singleton-jmenuitem-jbutton-abstractbutton-one-listener-for-the-app/</link><pubDate>Mon, 17 Nov 2008 21:17:24 +0100</pubDate><guid>https://shaaf.dev/post/2008-11-17-command-singleton-jmenuitem-jbutton-abstractbutton-one-listener-for-the-app/</guid><description>Here I would like to demonstrate a simple use of JMenuItems being used with Single Listener for the entire system. A simple sample of use would probably be SingleInstance Desktop Application.
Lets see how that is done here.
First lets create a OneListener class that should be able to listen to ActionEvents and also be able to add Commands to itself. Please refer to my previous post on Command,Singleton if you would like to see more about this patterns and there usage.</description></item><item><title>Doing the Locale - Danmark</title><link>https://shaaf.dev/post/2008-11-12-doing-the-locale-danmark/</link><pubDate>Wed, 12 Nov 2008 14:52:08 +0100</pubDate><guid>https://shaaf.dev/post/2008-11-12-doing-the-locale-danmark/</guid><description>The following illustrates how to get the Number format working with a danish locale.
&amp;rsquo;&amp;rsquo;' import java.text.NumberFormat; import java.util.Currency; import java.util.Locale;
public class TestLocale { public static void main(String args[]){ // Create a Locale for Danmark Locale DANMARK = new Locale(&amp;quot;da&amp;quot;,&amp;quot;DK&amp;quot;); // get the currency instance for this locale. Currency krone = Currency.getInstance(DANMARK); // Get a Number format for the locale. NumberFormat krFormat = NumberFormat.getCurrencyInstance(DANMARK); // A symbol for the currency String symbol = krFormat.</description></item><item><title>How to read a file from the JAR?</title><link>https://shaaf.dev/post/2008-10-31-how-to-read-a-file-from-the-jar/</link><pubDate>Fri, 31 Oct 2008 20:57:54 +0100</pubDate><guid>https://shaaf.dev/post/2008-10-31-how-to-read-a-file-from-the-jar/</guid><description>Someone just asked me this question today. And I thought might as well put it down for info.
&amp;rsquo;&amp;rsquo;' public TestReadFileFromJar() throws FileNotFoundException, IOException { InputStream is = getClass().getResource(&amp;ldquo;txtData/states.properties&amp;rdquo;); read(is); } &amp;rsquo;''
In the case above txtData is placed in the jar on the root. Remmember to add the path with the &amp;ldquo;/&amp;rdquo;</description></item><item><title>Command</title><link>https://shaaf.dev/post/2008-10-31-command/</link><pubDate>Fri, 31 Oct 2008 20:45:04 +0100</pubDate><guid>https://shaaf.dev/post/2008-10-31-command/</guid><description>By using the command pattern you are seperating the operation from the invoking object. And just because of that it becomes easier to change the command without chagning the caller/s. This means that you could use Command pattern when you might have the following situation
You want to parameterize objects to perform an action You want to specify, execute and queue requests at different times.
Just to quickly start you need a command object, An interface will keep it easy going in this case, thus providing you with the option of extending other classes e.</description></item><item><title>Implementing the adapter</title><link>https://shaaf.dev/post/2008-10-29-implementing-the-adapter/</link><pubDate>Wed, 29 Oct 2008 20:47:56 +0100</pubDate><guid>https://shaaf.dev/post/2008-10-29-implementing-the-adapter/</guid><description>Typically when implementing an interface you would have to implement all the methods that exist in that interface. A very good example is the MouseListener in the java Swing. When you need to implement more then one method where as typically you might be catching only one of them. Saying that you would also find a Mouse Adapter provided as well. Some of us use that often. And that is part of the Adapter pattern.</description></item><item><title>wasprofile -create -delete</title><link>https://shaaf.dev/post/2008-10-24-wasprofile-create-delete/</link><pubDate>Fri, 24 Oct 2008 13:38:00 +0200</pubDate><guid>https://shaaf.dev/post/2008-10-24-wasprofile-create-delete/</guid><description>Sometimes you require to do things silently, without any questions asked and &amp;ldquo;Just Do It&amp;rdquo; attitude is required.
I often find my self with this problem.
If you want to delete or create a Websphere profile from your command line try the following. (I have tried on RSA only)
# deleteing a profile wasprofile -delete -profileName MyProfile You should get the following message on deletion
INSTCONFSUCCESS: Success: The profile no longer exists.</description></item><item><title>Abstract Factory pattern</title><link>https://shaaf.dev/post/2008-10-10-abstract-factory-pattern/</link><pubDate>Fri, 10 Oct 2008 10:20:10 +0200</pubDate><guid>https://shaaf.dev/post/2008-10-10-abstract-factory-pattern/</guid><description>Factories have been aÂ key patternÂ in building applications, its fascinatingly simple, effective and to the point. When starting to learn a design oriented approach to applications or API, I would always recommend a factory pattern as one of the key starting notes of highlight in your design.
So today I am talking about the Abstract Factory pattern. Its not an &amp;ldquo;abstract&amp;rdquo; class or object that you call a pattern. But its a Factory of facotries and that is what exactly makes it so much wordingly abstract.</description></item><item><title>Crocus - CSV Reader</title><link>https://shaaf.dev/post/2008-10-03-crocus-csv-reader/</link><pubDate>Fri, 03 Oct 2008 23:38:42 +0200</pubDate><guid>https://shaaf.dev/post/2008-10-03-crocus-csv-reader/</guid><description>Easy to use ready to go CSV File Reading utility. Read One or Multiple files into a RecordManager, quick access to the file with segmentation into Fields and Records. Merge Multiple CSV files in one. Listener to CSV Files.
Download Here
Organization: A CSV file is broken up as follows A CSVField has a group of characters A CSVRecord has a group of CSVFields A CSVFile has a group of record</description></item><item><title>HowTo create a JDBC provider with wsadmin scripting - Jython</title><link>https://shaaf.dev/post/2008-07-01-howto-create-a-jdbc-provider-with-wsadmin-scripting-jython/</link><pubDate>Tue, 01 Jul 2008 14:21:48 +0200</pubDate><guid>https://shaaf.dev/post/2008-07-01-howto-create-a-jdbc-provider-with-wsadmin-scripting-jython/</guid><description>Last week I wrote a post about creating MQQueues with jacl. However today I am moving to Jython. This is the new scripting languauge supported by the wsadmin. The following write-up helps you create a JDBC provider using Jython in 6 easy stepsÂ on the wsadmin console.
*Pre requirements: *Following should be known to start using this tutorial.
How to launch the wsadmin with Jython enabled. *Where will I find the wsadmin?</description></item><item><title>Creating an SVN wrap for your build using Ant</title><link>https://shaaf.dev/post/2008-06-30-creating-an-svn-wrap-for-your-build-using-ant/</link><pubDate>Mon, 30 Jun 2008 14:45:32 +0200</pubDate><guid>https://shaaf.dev/post/2008-06-30-creating-an-svn-wrap-for-your-build-using-ant/</guid><description>Today after along break I would jump right on to one of the interesting topics in my den these days.
One of my friends was lately troubled with doing some SVN stuff like merging etc. And a lot of people will agree with me on their first experiences. :) I think.
While Automated builds take a lot of our time I thought I could plug in with some automated merging and a few other tasks.</description></item><item><title>Creating the MQQueues with wsadmin scripting - JACL Part 2</title><link>https://shaaf.dev/post/2008-06-25-creating-the-mqqueues-with-wsadmin-scripting-jacl-part-2/</link><pubDate>Wed, 25 Jun 2008 14:40:47 +0200</pubDate><guid>https://shaaf.dev/post/2008-06-25-creating-the-mqqueues-with-wsadmin-scripting-jacl-part-2/</guid><description>Yesterday I wrote an article about creating and configuring the MQQueueConnectionFactory with the JACL on the wsadmin console. The other half of the article that was left out was to create the queues also.
The world looks pretty much the same today and my /etc/profile doesnt seemed to have been sourced again. Good we dont need a restart.
You would find some of the steps to be similar and that is because we are running on the same configs.</description></item><item><title>Creating the MQQueueConnectionFactory with wsadmin scripting - JACL Part 1.</title><link>https://shaaf.dev/post/2008-06-24-websphere-admin-scripting-jacl-part-1/</link><pubDate>Tue, 24 Jun 2008 15:44:31 +0200</pubDate><guid>https://shaaf.dev/post/2008-06-24-websphere-admin-scripting-jacl-part-1/</guid><description>While working my way in some piece of long java code I came across this huge pile of sand that just shattered me off every bit of patience I was left with. The dilemma all of us face every second day. CONFIGURATIONS!!
While my sarcastic mind was just saying Congratulations to me instead. And just how the - would you expect me to start configuring now.
So what exactly is my problem?</description></item><item><title>Quick start Singleton - Walk through</title><link>https://shaaf.dev/post/2008-06-23-quick-start-singleton-walk-through/</link><pubDate>Mon, 23 Jun 2008 03:56:37 +0200</pubDate><guid>https://shaaf.dev/post/2008-06-23-quick-start-singleton-walk-through/</guid><description>This being my first existence on the network and I just want to make sure that I would come back to this blog page again sometime and keep on writing. For now this is a quick 5 min walk through of getting your hands dirty on the Singleton Pattern. As any ones first pattern Singleton always seems to be the easiest to adapt and ironically always the mistress of your pains; when you realize the act wasn&amp;rsquo;t right in the first place.</description></item></channel></rss>